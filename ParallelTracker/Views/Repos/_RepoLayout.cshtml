@using ParallelTracker.Controllers
@model Repo
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
	var action = ViewContext.RouteData.Values["action"].ToString();

	string getActiveText(string checkAction) => checkAction == action ? "active" : "";

}

<h3>
	<img src="@Model.AvatarUrl" alt="Repo avatar" height="45" class="mr-2" />
	<a href="@Model.GitHubOwnerUrl" target="_blank">@Model.GitHubOwnerLogin</a>/<a href="@Model.Url" target="_blank">@Model.Name</a>
</h3>

<p class="text-muted" style="font-size: small">
	Copied by <strong>@Model.Owner.UserName</strong> on <strong>@Model.CopiedAt.ToString("d")</strong><br />
</p>
<div class="card mb-3">
	<div class="card-body p-2 px-3">@Model.Description</div>
</div>
<ul class="nav nav-tabs mb-2">
	<li class="nav-item">
		<a class="nav-link @getActiveText(nameof(ReposController.Details))" asp-action="@nameof(ReposController.Details)" asp-route-id="@Model.Id">Details</a>
	</li>
	<li class="nav-item">
		<a class="nav-link @getActiveText(nameof(ReposController.Edit))" asp-action="@nameof(ReposController.Edit)" asp-route-id="@Model.Id">Manage</a>
	</li>
</ul>
@RenderBody()

@await RenderSectionAsync("Scripts", required: false)