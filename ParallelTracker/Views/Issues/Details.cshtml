@model ParallelTracker.Models.Issue
@inject ParallelTracker.Tools.CurrentResources CurrentResources

@{
	var issue = CurrentResources.Issue;
	ViewData["Title"] = $"Issue #{issue.Id} {issue.Title}";
	Layout = "~/Views/Shared/_IssueLayout.cshtml";
	var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
	var isIssueAuthor = currentUserId == issue.AuthorId;
}

<div class="card shadow-sm mb-3">
	<div class="card-header text-muted py-1 d-flex flex-row"></div>
	<div class="card-body">
		@if (string.IsNullOrEmpty(issue.Text))
		{
			<p class="card-text font-italic">No desciption provided</p>
		}
		else
		{
			<p class="card-text markdown" id="issue-text">
				@issue.Text
				@*@foreach (var line in issue.Text.Split(new[] { "\r\n", "\n" }, StringSplitOptions.None))
					{
					<text>@line</text><br />
					}*@
			</p>
		}
	</div>
	@if (issue.IsEdited)
	{
		<div class="card-footer text-muted py-0">
			<small>edited on @issue.EditedAt?.ToString("g")</small>
		</div>
	}
</div>
<hr />

@foreach (var comment in issue.Comments)
{
	<div class="card shadow-sm mb-3">
		<div class="card-header text-muted py-1 d-flex flex-row">
			<span><strong>@comment.Author</strong> on @comment.CreatedAt.ToString("g")</span>
			@if (currentUserId == comment.AuthorId)
			{
				<span class="ml-auto"><a asp-controller="Comments" asp-action="Edit" asp-route-id="@comment.Id">Edit</a></span>
			}
		</div>
		<div class="card-body">
			@if (string.IsNullOrEmpty(comment.Text))
			{
				<p class="card-text font-italic">No text</p>
			}
			else
			{
				<p class="card-text comment-text markdown">
					@comment.Text
					@*@foreach (var line in comment.Text.Split(new[] { "\r\n", "\n" }, StringSplitOptions.None))
						{
							<text>@line</text><br />
						}*@
				</p>
			}
		</div>
		@if (comment.IsEdited)
		{
			<div class="card-footer text-muted py-0">
				<small>edited on @comment.EditedAt?.ToString("g")</small>
			</div>
		}
	</div>
}

<div class="d-flex justify-content-center">
	<a class="btn btn-primary align-self-center" asp-controller="Comments" asp-action="Create" asp-route-issueId="@Model.Id">Leave a comment</a>
</div>

@section Scripts {
	<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
	<script>
		const issueTextElm = document.getElementById('issue-text')
		issueTextElm.innerHTML = marked(issueTextElm.innerHTML.trim())

		Array.from(document.getElementsByClassName("comment-text")).forEach(elm => {
			elm.innerHTML = marked(elm.innerHTML.trim())
		})
	</script>
}